name: Test client

on:
  push:
    branches: [main]
    paths: ["client/**", ".github/**"]

jobs:
  python_ci:
    defaults:
      run:
        working-directory: client
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - serverImage: bastionlab
            os: ubuntu-latest
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2
      ########## SETUP ##########
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      ########## INSTALL CLIENT ##########
      - name: Install bastionlab
        run: |
          make dev-install
          source env/bin/activate

      # ########## GET SERVER ##########
      # - name: Download artifact
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: ${{ matrix.serverImage }}
      #     path: /tmp
      # - name: Load image
      #   run: |
      #     docker load --input /tmp/${{ matrix.serverImage }}.tar
      #     docker image ls -a
      # - name: Launch server
      #   run: |
      #     docker kill -f app > /dev/null 2>&1 || true
      #     docker run --rm -d -e bastionlab_DISABLE_TELEMETRY=1 -p 50056:50056  --name app ${{ matrix.serverImage }}:latest

      ########## TESTING CLIENT ##########
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 mypy pytest-cov

      - name: Lint with flake8
        if: always()
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

      - name: Test with pytest
        if: always()
        run: pytest --cov --cov-report=xml
        env:
          bastionlab_TEST_NO_LAUNCH_SERVER: "true"
      # Need test to be written in order to work properly

      - name: Coverage report
        uses: orgoro/coverage@v2
        with:
          coverageFile: client/coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          retention-days: 5

      - name: Check types with mypy
        if: always()
        run: |
          mypy src/bastionlab
