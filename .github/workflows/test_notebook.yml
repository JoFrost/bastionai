name: Test notebook

on: [push]

jobs:
  testing_notebook:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - serverImage: bastionlab
            clientImage: bastionlab
            client-wheel: client-artifacts
            os: ubuntu-latest
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2
      ########## SETUP ##########
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      ######### INSTALL CLIENT FROM SOURCE OTHERWISE ##########
      - name: Install bastionlab client from source
        # if: ${{ steps.install-client-wheel.outcome == 'failure' }}
        run: |
          cd client
          make dev-install
          source env/bin/activate

      ###### BUILD SERVER OTHERWISE ######
      #- name: Build server
      #  id: build-server-no-download
      #  if: ${{ steps.load-image.outcome == 'failure' }}
       # run: |
       #   docker build -t ${{ matrix.serverImage }}:latest -f ./Dockerfile .

      ###### CHECK BASTIONLAB IMAGE IS INSTALLED ######
      # - name: Check bastionlab image is installed
      #   id: check-bastionlab-image
      #   run: |
      #     docker image ls -a
      #     docker image inspect mithrilsecuritysas/bastionlab

      ########## LAUNCH SERVER ##########
      - name: Launch server
      #  if: ${{ steps.check-bastionlab-image.outcome == 'success' }}
        run: |
          docker kill -f app > /dev/null 2>&1 || true
          docker run --rm -d -e BASTIONLAB_DISABLE_TELEMETRY=1 -e DISABLE_AUTHENTICATION=1 -p 50056:50056  --name app mithrilsecuritysas/bastionlab:latest
      
      ########## TESTING NOTEBOOK ##########
      - name: Testing the notebooks
        # Here we convert the notebooks to python scripts and run them
        # In order to avoid running shell commands that we don't want to run
        # we replace the get_ipython().system function by a function that prints whatever
        # For shell commands that we would want to run, we use the % prefix
        # Need to replace sed with no_execute
        run: |
          pip install ./client
          pip install jupyter nbconvert
          python .github/scripts/remove_cells.py
          wget 'https://raw.githubusercontent.com/datasciencedojo/datasets/master/titanic.csv'
          cp titanic.csv converted/train.csv
          cp titanic.csv converted/titanic.csv
          rm ./converted/resnet_example_notebook.ipynb
          rm ./converted/distilbert distilbert_example_notebook.ipynb
          rm ./converted/nbagg_uat.ipynb
          for file in ./converted/*.ipynb; do 
            sed -i 's/"!pip install bastionlab"/""/g' $file
            echo "File is: $file"
            jupyter nbconvert --execute --to notebook --inplace --ExecutePreprocessor.timeout=600 --output-dir=./converted $file
          done
